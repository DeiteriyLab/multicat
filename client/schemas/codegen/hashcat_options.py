# generated by datamodel-codegen:
#   filename:  hashcat_options.json

from __future__ import annotations

from typing import Any

from pydantic import BaseModel, ConfigDict, Field, RootModel


class Model(RootModel[Any]):
    model_config = ConfigDict(
        from_attributes=True,
    )
    root: Any


class CustomCharset(BaseModel):
    model_config = ConfigDict(
        from_attributes=True,
    )
    charset_id: int = Field(..., ge=1, le=4)
    charset: str


class HashcatOptions(BaseModel):
    model_config = ConfigDict(
        from_attributes=True,
    )
    optimization: bool = Field(
        False,
        description="Enables or disables optimization. This can be referred to as 'opt' or 'O' in command-line interfaces.",
    )
    work_mode: int = Field(
        4,
        description="Defines the work mode of Hashcat. It is equivalent to 'work_mode' or 'w' in command-line interfaces.",
    )
    dry_run: bool = Field(
        False,
        description="If set to true, performs a dry run without actual execution.",
    )
