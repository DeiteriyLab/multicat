version: "3.8"
services:
  server:
    build: .
    depends_on:
      - rabbitmq
      - db
    command: celery -A main:app worker -Q server --loglevel=info
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      TIMEZONE: ${TIMEZONE}
      DATABASE_URL: ${DATABASE_URL}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
    volumes:
      - server_data:/app/gnupg
    networks:
      - multicat
  celerybeat:
    build: .
    depends_on:
      - rabbitmq
      - db
    command: celery -A main:app beat -l info
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      TIMEZONE: ${TIMEZONE}
      DATABASE_URL: ${DATABASE_URL}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
    networks:
      - multicat
  rabbitmq:
    image: rabbitmq:3.13.0-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - multicat
  db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - multicat
volumes:
  postgres_data:
  server_data:
networks:
  multicat:
    external: true
